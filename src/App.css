.tw-followCard {
  display: flex;
  align-items: center;
  color: #fff;
  font-size: 0.8rem;
  justify-content: space-between;
  width: 300px;
}

.tw-followCard-header {
  display: flex;
  align-items: center;
  gap: 4px
}

.tw-followCard-info {
  display: flex;
  flex-direction: column;
}

.tw-followCard-infoUserName {
  opacity: .6;
}

.tw-followCard-avatar {
  width: 48px;
  height: 48px;
  border-radius: 100px;
}

.tw-followCard-button {
  margin-left: 16px;
  border: 0;
  border-radius: 999px;
  padding: 6px 16px;
  font-weight: bold;
  cursor: pointer;
  border: 1px solid #000;
  transition: .3s ease background-color;
}

.tw-followCard-button:hover {
  opacity: .8;
}

.tw-followCard-button.is-following {
  border: 1px solid #bbb;
  background: transparent;
  color: #fff;
  width: 140px;
}

.tw-followCard-button.is-following:hover {
  background: rgba(206, 4, 4, 0.24);
  color: red;
  border: 1px solid red;
}

.tw-followCard-button.is-following:hover .tw-followCard-stopFollow {
  display: block;
} /* esta sintaxis se usa para trabajar con un evento del padre y que el cambio ocurra en el children
por ejemplo la clase tw-followCard-button es de una etiqueta button que es padre del span que tiene 
como clase la etiqueta tw-followCard-StopFollow, y permite que se vea su contenido con el display block*/

.tw-followCard-button.is-following:hover .tw-followCard-buttonText {
  display: none;
}

.tw-followCard-stopFollow {
  display: none;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  background: #222;
}

/*Nota esta manera de nombrar los className para los estilos de ccs se llama
suit para manejarlos mejor de una forma semantica y ganar puntos con google 
en el buscador, en este caso se nombran como titulo de la app tw guion - nombre del
componente - guion nombre elemento etiqueta html - guion elemento o etiqueta html hija 
del elemento previo */